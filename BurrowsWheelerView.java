/*
 * BurrowsWheelerView.java
 */

package burrowswheeler;

import java.awt.Color;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.text.*;



/**
 * The application's main frame.
 */
public class BurrowsWheelerView extends FrameView {

    private File file;
    
    public BurrowsWheelerView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = BurrowsWheelerApp.getApplication().getMainFrame();
            aboutBox = new BurrowsWheelerAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        BurrowsWheelerApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFldFileName = new javax.swing.JTextField();
        bwtComb = new javax.swing.JButton();
        bwtMTF = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaBwtComb = new javax.swing.JTextArea();
        btnBrowse = new javax.swing.JButton();
        bwtSort = new javax.swing.JButton();
        bwtLast = new javax.swing.JButton();
        bwtFirst = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaBwtSort = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtPaneBwLast = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtAreaBwtMtf = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtPaneBwtFirst = new javax.swing.JTextPane();
        bwtMtfDecode = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtAreaMtfDecode = new javax.swing.JTextArea();
        bwtDecode = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtAreaBwtDecode = new javax.swing.JTextArea();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(burrowswheeler.BurrowsWheelerApp.class).getContext().getResourceMap(BurrowsWheelerView.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        txtFldFileName.setText(resourceMap.getString("txtFldFileName.text")); // NOI18N
        txtFldFileName.setName("txtFldFileName"); // NOI18N

        bwtComb.setText(resourceMap.getString("bwtComb.text")); // NOI18N
        bwtComb.setActionCommand(resourceMap.getString("bwtComb.actionCommand")); // NOI18N
        bwtComb.setName("bwtComb"); // NOI18N
        bwtComb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bwtCombActionPerformed(evt);
            }
        });

        bwtMTF.setText(resourceMap.getString("bwtMTF.text")); // NOI18N
        bwtMTF.setName("bwtMTF"); // NOI18N
        bwtMTF.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                bwtMTFComponentAdded(evt);
            }
        });
        bwtMTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bwtMTFActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        txtAreaBwtComb.setColumns(20);
        txtAreaBwtComb.setForeground(resourceMap.getColor("txtAreaBwtComb.foreground")); // NOI18N
        txtAreaBwtComb.setRows(5);
        txtAreaBwtComb.setCaretColor(resourceMap.getColor("txtAreaBwtComb.caretColor")); // NOI18N
        txtAreaBwtComb.setName("txtAreaBwtComb"); // NOI18N
        jScrollPane1.setViewportView(txtAreaBwtComb);

        btnBrowse.setText(resourceMap.getString("btnBrowse.text")); // NOI18N
        btnBrowse.setName("btnBrowse"); // NOI18N
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        bwtSort.setText(resourceMap.getString("bwtSort.text")); // NOI18N
        bwtSort.setActionCommand(resourceMap.getString("bwtSort.actionCommand")); // NOI18N
        bwtSort.setName("bwtSort"); // NOI18N
        bwtSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bwtSortActionPerformed(evt);
            }
        });

        bwtLast.setText(resourceMap.getString("bwtLast.text")); // NOI18N
        bwtLast.setActionCommand(resourceMap.getString("bwtLast.actionCommand")); // NOI18N
        bwtLast.setName("bwtLast"); // NOI18N
        bwtLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bwtLastActionPerformed(evt);
            }
        });

        bwtFirst.setText(resourceMap.getString("bwtFirst.text")); // NOI18N
        bwtFirst.setActionCommand(resourceMap.getString("bwtFirst.actionCommand")); // NOI18N
        bwtFirst.setName("bwtFirst"); // NOI18N
        bwtFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bwtFirstActionPerformed(evt);
            }
        });

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        txtAreaBwtSort.setColumns(20);
        txtAreaBwtSort.setRows(5);
        txtAreaBwtSort.setName("txtAreaBwtSort"); // NOI18N
        jScrollPane3.setViewportView(txtAreaBwtSort);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        txtPaneBwLast.setForeground(resourceMap.getColor("txtPaneBwLast.foreground")); // NOI18N
        txtPaneBwLast.setName("txtPaneBwLast"); // NOI18N
        jScrollPane2.setViewportView(txtPaneBwLast);

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        txtAreaBwtMtf.setColumns(20);
        txtAreaBwtMtf.setRows(5);
        txtAreaBwtMtf.setName("txtAreaBwtMtf"); // NOI18N
        jScrollPane5.setViewportView(txtAreaBwtMtf);

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        txtPaneBwtFirst.setName("txtPaneBwtFirst"); // NOI18N
        jScrollPane4.setViewportView(txtPaneBwtFirst);

        bwtMtfDecode.setText(resourceMap.getString("bwtMtfDecode.text")); // NOI18N
        bwtMtfDecode.setName("bwtMtfDecode"); // NOI18N
        bwtMtfDecode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bwtMtfDecodeActionPerformed(evt);
            }
        });

        jScrollPane6.setName("jScrollPane6"); // NOI18N

        txtAreaMtfDecode.setColumns(20);
        txtAreaMtfDecode.setRows(5);
        txtAreaMtfDecode.setName("txtAreaMtfDecode"); // NOI18N
        jScrollPane6.setViewportView(txtAreaMtfDecode);

        bwtDecode.setText(resourceMap.getString("bwtDecode.text")); // NOI18N
        bwtDecode.setName("bwtDecode"); // NOI18N
        bwtDecode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bwtDecodeActionPerformed(evt);
            }
        });

        jScrollPane7.setName("jScrollPane7"); // NOI18N

        txtAreaBwtDecode.setColumns(20);
        txtAreaBwtDecode.setRows(5);
        txtAreaBwtDecode.setName("txtAreaBwtDecode"); // NOI18N
        jScrollPane7.setViewportView(txtAreaBwtDecode);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1)
                        .addGap(43, 43, 43)
                        .addComponent(txtFldFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(btnBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bwtComb))
                        .addGap(40, 40, 40)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(bwtSort, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(bwtLast))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(bwtFirst))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bwtMTF, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addComponent(bwtMtfDecode, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(bwtDecode)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(151, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFldFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowse))
                .addGap(28, 28, 28)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bwtComb)
                        .addComponent(bwtSort))
                    .addComponent(bwtLast)
                    .addComponent(bwtFirst))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGap(38, 38, 38)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bwtMtfDecode, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bwtMTF))
                .addGap(26, 26, 26)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(bwtDecode))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(97, 97, 97))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(burrowswheeler.BurrowsWheelerApp.class).getContext().getActionMap(BurrowsWheelerView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 950, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 780, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        // TODO add your handling code here:
        if(evt.getSource() == btnBrowse) {
            JFileChooser chooser = new JFileChooser();
            int ret = chooser.showOpenDialog(mainPanel);

            if(ret == JFileChooser.APPROVE_OPTION) {
                file = chooser.getSelectedFile();
                txtFldFileName.setText(file.getAbsolutePath());
            }
        }
        
    }//GEN-LAST:event_btnBrowseActionPerformed

    private void bwtCombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bwtCombActionPerformed
        // TODO add your handling code here:
        if(evt.getSource() == bwtComb) {
            try {
                BufferedReader reader = new BufferedReader(new FileReader(file));
                String line = reader.readLine();
                BurrowsWheelerTransform bwt = new BurrowsWheelerTransform();
                String inputLine=line+"*";
                bwt.encode(inputLine);

                
                
                txtAreaBwtComb.setText("\nCombination of the given input String\n");
                bwCyclic=bwt.getCyclicFirst();


                for(int i=0;i<bwCyclic.length;i++)
                {
                    txtAreaBwtComb.append(bwCyclic[i]);
                    txtAreaBwtComb.append("\n");

                    
                }

                
            } catch (IOException ex) {
                Logger.getLogger(BurrowsWheelerView.class.getName()).log(Level.SEVERE, null, ex);
            }

           
        }
    }//GEN-LAST:event_bwtCombActionPerformed

    private void bwtSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bwtSortActionPerformed
        // TODO add your handling code here:
         if(evt.getSource()==bwtSort){
            try {
                BufferedReader reader = new BufferedReader(new FileReader(file));
                String line = reader.readLine();
                BurrowsWheelerTransform bwt1 = new BurrowsWheelerTransform();
                String inputLine = line + "*";
                bwt1.encode(inputLine);
                
                bwComb = bwt1.getCombination();



                txtAreaBwtSort.setText("\nSorted Array of Combination\n");
                for (int i = 0; i < bwComb.length; i++) {
                    txtAreaBwtSort.append(bwComb[i]);
                    txtAreaBwtSort.append("\n");
                }
            } catch (IOException ex) {
                Logger.getLogger(BurrowsWheelerView.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
    }//GEN-LAST:event_bwtSortActionPerformed

    private void bwtLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bwtLastActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==bwtLast){
            try {
                BufferedReader reader = new BufferedReader(new FileReader(file));
                String line = reader.readLine();
                BurrowsWheelerTransform bwt2 = new BurrowsWheelerTransform();
                String inputLine = line + "*";
                bwt2.encode(inputLine);

                bwComb=bwt2.getCombination();
                bwIndex=bwt2.getIndex();

                SimpleAttributeSet set = new SimpleAttributeSet();
                Document doc = txtPaneBwLast.getStyledDocument();


               set = new SimpleAttributeSet();
               StyleConstants.setFontSize(set, 14);


                               
               // StyledDocument doc=txtPaneBwLast.getStyledDocumnet();
                txtPaneBwLast.setText("\nArray of Last Symbol\n");
                for (int i = 0; i < bwComb.length; i++) {
                    try {
                        StyleConstants.setForeground(set,new Color(bwIndex[i]*20,bwIndex[i]*30,bwIndex[i]*15));
                        doc.insertString(doc.getLength(), bwComb[i]+"\n", set);
                        
                        

                        // txtPaneBwLast.setText("\n");
                    } catch (BadLocationException ex) {
                        Logger.getLogger(BurrowsWheelerView.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                   // txtPaneBwLast.setText("\n");
                }


            } catch (IOException ex) {
                Logger.getLogger(BurrowsWheelerView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_bwtLastActionPerformed

    private void bwtFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bwtFirstActionPerformed
        // TODO add your handling code here:
         if(evt.getSource()==bwtFirst){
            try {
                BufferedReader reader = new BufferedReader(new FileReader(file));
                String line = reader.readLine();
                BurrowsWheelerTransform bwt3 = new BurrowsWheelerTransform();
                String inputLine = line + "*";
                bwt3.encode(inputLine);

                
                bwComb=bwt3.getCombination();
                bwCyclicComb=bwt3.getCyclicCombination();

                SimpleAttributeSet set = new SimpleAttributeSet();
                Document doc = txtPaneBwtFirst.getStyledDocument();


               set = new SimpleAttributeSet();
               StyleConstants.setFontSize(set, 14);



               // StyledDocument doc=txtPaneBwLast.getStyledDocumnet();
                //txtPaneBwtFirst.setText("\nArray of First Symbol\n");
                for (int i = 0; i < bwComb.length; i++)
                {
                    

                    try {
                        StyleConstants.setForeground(set,new Color(i*20,i*30,i*15));
                        doc.insertString(doc.getLength(), bwCyclicComb[i]+"\n", set);



                        // txtPaneBwLast.setText("\n");
                    } catch (BadLocationException ex) {
                        Logger.getLogger(BurrowsWheelerView.class.getName()).log(Level.SEVERE, null, ex);
                    }
                

                
                

            } 
         
         }
                catch (IOException ex) {
                Logger.getLogger(BurrowsWheelerView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_bwtFirstActionPerformed

    private void bwtMTFComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_bwtMTFComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_bwtMTFComponentAdded

    private void bwtMTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bwtMTFActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==bwtMTF){
            try {
                BufferedReader reader = new BufferedReader(new FileReader(file));
                String line = reader.readLine();
                BurrowsWheelerTransform bwt4 = new BurrowsWheelerTransform();
                String inputLine = line + "*";
                bwt4.encode(inputLine);

                bwFirstSymbol = bwt4.getFirstSymbols();
                bwIndex=bwt4.getIndex();

                MTFCoding mtf=new MTFCoding();
                mtf.mtfCoding(bwFirstSymbol, bwIndex);

                mtfAlpha=mtf.getFinalAlpha();
                mtfCode=mtf.getCodeArray();


                txtAreaBwtMtf.setText("\nDistinct Alphabet Set\n");
                txtAreaBwtMtf.append(mtfAlpha);
                txtAreaBwtMtf.append("\n The Index Array");
                for(int i=0;i<mtfCode.length;i++)
                {
                        txtAreaBwtMtf.append(mtfCode[i]+"");

                }

            } catch (IOException ex) {
                Logger.getLogger(BurrowsWheelerView.class.getName()).log(Level.SEVERE, null, ex);
            }
            }

    }//GEN-LAST:event_bwtMTFActionPerformed

    private void bwtMtfDecodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bwtMtfDecodeActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==bwtMtfDecode){
            try {
                BufferedReader reader = new BufferedReader(new FileReader(file));
                String line = reader.readLine();
                BurrowsWheelerTransform bwt5 = new BurrowsWheelerTransform();
                String inputLine = line + "*";
                bwt5.encode(inputLine);

                bwFirstSymbol = bwt5.getFirstSymbols();
                bwIndex=bwt5.getIndex();

                MTFCoding mtf1=new MTFCoding();
                mtf1.mtfCoding(bwFirstSymbol, bwIndex);

                mtfAlpha=mtf1.getFinalAlpha();
                mtfCode=mtf1.getCodeArray();

                mtf1.mtfDecoding(mtfAlpha, mtfCode);
                mtfLastSymbol=mtf1.getTempLastSymbol();





                txtAreaMtfDecode.setText("\n MTF Decoded Last Symbol Array of the Original String\n");

                for(int i=0;i<mtfLastSymbol.length;i++)
                {
                txtAreaMtfDecode.append(mtfLastSymbol[i]+"");


                }
                

            } catch (IOException ex) {
                Logger.getLogger(BurrowsWheelerView.class.getName()).log(Level.SEVERE, null, ex);
            }
            }


    }//GEN-LAST:event_bwtMtfDecodeActionPerformed

    private void bwtDecodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bwtDecodeActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==bwtDecode){
            try {
                BufferedReader reader = new BufferedReader(new FileReader(file));
                String line = reader.readLine();
                BurrowsWheelerTransform bwt6 = new BurrowsWheelerTransform();
                String inputLine = line + "*";
                bwt6.encode(inputLine);

                bwFirstSymbol = bwt6.getFirstSymbols();
                bwIndex=bwt6.getIndex();

                MTFCoding mtf2=new MTFCoding();
                mtf2.mtfCoding(bwFirstSymbol, bwIndex);

                mtfAlpha=mtf2.getFinalAlpha();
                mtfCode=mtf2.getCodeArray();

                mtf2.mtfDecoding(mtfAlpha, mtfCode);

                mtfLastSymbol=mtf2.getTempLastSymbol();

                String Mtf=mtfLastSymbol.toString();
                bwt6.decode(Mtf, bwIndex);

                bwtOriginalString=bwt6.getTempDecodedSeq();





                txtAreaBwtDecode.setText("\nThe Orinal Input String\n");

                for(int i=0;i<mtfLastSymbol.length;i++) {
                    txtAreaBwtDecode.append(mtfLastSymbol[i]+"");
                    txtAreaBwtDecode.append("\n");
                }

            } catch (IOException ex) {
                Logger.getLogger(BurrowsWheelerView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_bwtDecodeActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton bwtComb;
    private javax.swing.JButton bwtDecode;
    private javax.swing.JButton bwtFirst;
    private javax.swing.JButton bwtLast;
    private javax.swing.JButton bwtMTF;
    private javax.swing.JButton bwtMtfDecode;
    private javax.swing.JButton bwtSort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JTextArea txtAreaBwtComb;
    private javax.swing.JTextArea txtAreaBwtDecode;
    private javax.swing.JTextArea txtAreaBwtMtf;
    private javax.swing.JTextArea txtAreaBwtSort;
    private javax.swing.JTextArea txtAreaMtfDecode;
    private javax.swing.JTextField txtFldFileName;
    private javax.swing.JTextPane txtPaneBwLast;
    private javax.swing.JTextPane txtPaneBwtFirst;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;

    //My own variables for getter functions

    private String bwFirstSymbol;
    private String[] bwCyclic;
    private int[] bwIndex;
    private String mtfAlpha;
    private int[] mtfCode;
    private String[] bwComb;
    private String[] bwCyclicComb;
    private char[] mtfLastSymbol;
    private char[] bwtOriginalString;

}
